{"ast":null,"code":"import _toConsumableArray from\"/Users/owenkraft/the_odin_project/react-resume-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/owenkraft/the_odin_project/react-resume-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/owenkraft/the_odin_project/react-resume-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/owenkraft/the_odin_project/react-resume-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/owenkraft/the_odin_project/react-resume-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/owenkraft/the_odin_project/react-resume-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{Component}from'react';import Emoji from'a11y-react-emoji';import uniqid from\"uniqid\";var Experience=/*#__PURE__*/function(_Component){_inherits(Experience,_Component);var _super=_createSuper(Experience);function Experience(){var _this;_classCallCheck(this,Experience);_this=_super.call(this);_this.state={jobs:[{id:uniqid(),employer:\"Bob's Burgers\",role:\"Chef, Owner and Operator\",responsibilities:[\"Make the burgers\",\"Serve the burgers\",\"Clean up afterwards\"],yearStarted:2011,yearEnded:2020,editFlag:false},{id:uniqid(),employer:\"Big Bob's Diner\",role:\"Cook and Server\",responsibilities:[\"Take orders\",\"Cook the orders\",\"Serve the orders\"],yearStarted:2001,yearEnded:2010,editFlag:false}],placeholderJob:{responsibilities:[\"describe responsibility here\",\"describe responsibility here\",\"describe responsibility here\"]},defaultJob:{responsibilities:[\"describe responsibility here\",\"describe responsibility here\",\"describe responsibility here\"]},activeEditFlag:false,addJobFlag:false};_this.editJob=_this.editJob.bind(_assertThisInitialized(_this));_this.updateJob=_this.updateJob.bind(_assertThisInitialized(_this));_this.addJob=_this.addJob.bind(_assertThisInitialized(_this));_this.removeJob=_this.removeJob.bind(_assertThisInitialized(_this));_this.submitNewJob=_this.submitNewJob.bind(_assertThisInitialized(_this));_this.addResponsibility=_this.addResponsibility.bind(_assertThisInitialized(_this));_this.removeResponsibility=_this.removeResponsibility.bind(_assertThisInitialized(_this));_this.toggleEditVisibility=_this.toggleEditVisibility.bind(_assertThisInitialized(_this));return _this;}_createClass(Experience,[{key:\"submitNewJob\",value:function submitNewJob(e){var newJobNode=e.target.closest(\".new-job\");var employer=newJobNode.querySelector(\".edit-employer\").value;var role=newJobNode.querySelector(\".edit-role\").value;var yearStarted=newJobNode.querySelector(\".edit-year-started\").value;var yearEnded=newJobNode.querySelector(\".edit-year-ended\").value;var newJobResponsibilityLength=newJobNode.querySelector(\".edit-responsibilities\").childNodes.length;var newJob={id:uniqid(),employer:employer,role:role,responsibilities:[],yearStarted:yearStarted,yearEnded:yearEnded,editFlag:false};for(var i=0;i<newJobResponsibilityLength;i++){var children=newJobNode.parentNode.querySelector(\".edit-responsibilities\");var newJobResponsibility=children.childNodes[i].firstChild.value;newJob.responsibilities.push(newJobResponsibility);}this.setState({// jobs: [...this.state.jobs, newJob],\njobs:[newJob].concat(_toConsumableArray(this.state.jobs)),addJobFlag:!this.state.addJobFlag,placeholderJob:this.state.defaultJob});console.log(this.state.jobs);}},{key:\"editJob\",value:function editJob(job){var jobsCopy=this.state.jobs;var selectedJob=jobsCopy.find(function(blah){return blah.id===job.job.id;});selectedJob.editFlag=!selectedJob.editFlag;this.setState({jobs:jobsCopy});}},{key:\"updateJob\",value:function updateJob(job){var jobsCopy=this.state.jobs;var selectedJob=jobsCopy.find(function(blah){return blah.id===job.job.id;});var selectedJobNode=document.getElementById(selectedJob.id);var employer=selectedJobNode.querySelector(\".edit-employer\").value;var role=selectedJobNode.querySelector(\".edit-role\").value;var yearStarted=selectedJobNode.querySelector(\".edit-year-started\").value;var yearEnded=selectedJobNode.querySelector(\".edit-year-ended\").value;for(var i=0;i<selectedJob.responsibilities.length;i++){var children=selectedJobNode.querySelector(\".edit-responsibilities\");var selectedResponsibility=children.childNodes[i].firstChild.value;selectedJob.responsibilities[i]=selectedResponsibility;}selectedJob.employer=employer;selectedJob.role=role;selectedJob.yearStarted=yearStarted;selectedJob.yearEnded=yearEnded;selectedJob.editFlag=!selectedJob.editFlag;this.setState({jobs:jobsCopy});}},{key:\"addJob\",value:function addJob(){this.setState({addJobFlag:!this.state.addJobFlag});}},{key:\"removeJob\",value:function removeJob(e,job){var jobsCopy=this.state.jobs;var jobsCopyIndex=jobsCopy.findIndex(function(jobCopy){return jobCopy.id===job.id;});jobsCopy.splice(jobsCopyIndex,1);this.setState({jobs:jobsCopy});}},{key:\"addResponsibility\",value:function addResponsibility(e,job){var checkIfNewJob=e.target.closest(\".job-block\").classList.contains(\"new-job\");if(checkIfNewJob){var placeholderJobCopy=this.state.placeholderJob;var placeholderJobNode=e.target.closest(\".new-job\");var children=placeholderJobNode.querySelector(\".edit-responsibilities\");var newResp=\"describe responsibility here\";for(var i=0;i<placeholderJobCopy.responsibilities.length;i++){var selectedResponsibility=children.childNodes[i].firstChild.value;placeholderJobCopy.responsibilities[i]=selectedResponsibility;}placeholderJobCopy.responsibilities=[].concat(_toConsumableArray(this.state.placeholderJob.responsibilities),[newResp]);this.setState({placeholderJob:placeholderJobCopy});}else{var jobsCopy=this.state.jobs;var selectedJob=jobsCopy.find(function(blah){return blah.id===job.id;});var selectedJobNode=document.getElementById(job.id);var _children=selectedJobNode.querySelector(\".edit-responsibilities\");var _newResp=\"describe responsibility here\";for(var _i=0;_i<selectedJob.responsibilities.length;_i++){var _selectedResponsibility=_children.childNodes[_i].firstChild.value;selectedJob.responsibilities[_i]=_selectedResponsibility;}selectedJob.responsibilities.push(_newResp);this.setState({jobs:jobsCopy});}}},{key:\"removeResponsibility\",value:function removeResponsibility(e,job){var checkIfNewJob=e.target.closest(\".job-block\").classList.contains(\"new-job\");if(checkIfNewJob){var placeholderJobCopy=this.state.placeholderJob;var placeholderNodeID=e.target.parentNode.id;var responsibilitiesNode=e.target.closest(\".edit-responsibilities\");var childrenArray=Array.from(responsibilitiesNode.childNodes);var childrenArrayIndex=childrenArray.findIndex(function(node){return node.id===placeholderNodeID;});for(var i=0;i<placeholderJobCopy.responsibilities.length;i++){var selectedResponsibility=responsibilitiesNode.childNodes[i].firstChild.value;placeholderJobCopy.responsibilities[i]=selectedResponsibility;};placeholderJobCopy.responsibilities.splice(childrenArrayIndex,1);this.setState({placeholderJob:placeholderJobCopy});}else{var jobsCopy=this.state.jobs;var selectedJob=jobsCopy.find(function(blah){return blah.id===job.id;});var selectedNodeID=e.target.parentNode.id;var _responsibilitiesNode=e.target.closest(\".edit-responsibilities\");var _childrenArray=Array.from(_responsibilitiesNode.childNodes);var _childrenArrayIndex=_childrenArray.findIndex(function(node){return node.id===selectedNodeID;});for(var _i2=0;_i2<selectedJob.responsibilities.length;_i2++){var _selectedResponsibility2=_responsibilitiesNode.childNodes[_i2].firstChild.value;selectedJob.responsibilities[_i2]=_selectedResponsibility2;};selectedJob.responsibilities.splice(_childrenArrayIndex,1);this.setState({jobs:jobsCopy});}}},{key:\"toggleEditVisibility\",value:function toggleEditVisibility(){var updateActiveEditFlag=!this.state.activeEditFlag;var editJobButton=document.getElementById(\"edit-job\");var editJobButtonHTML=\"<i class='fas fa-cog'></i>\";if(updateActiveEditFlag===true){editJobButton.innerHTML=\"all done\";editJobButton.classList.add(\"btn-green-inverse\");}else{editJobButton.innerHTML=editJobButtonHTML;editJobButton.classList.remove(\"btn-green-inverse\");}var addJobButton=document.getElementById(\"add-job\");addJobButton.classList.toggle(\"edit-job-hidden\");this.setState({activeEditFlag:updateActiveEditFlag});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Experience \",/*#__PURE__*/_jsx(Emoji,{symbol:\"\\uD83D\\uDCBC\",label:\"briefcase\"}),/*#__PURE__*/_jsx(\"button\",{id:\"edit-job\",onClick:this.toggleEditVisibility,className:\"float-right\",children:/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-cog\"})})]}),/*#__PURE__*/_jsx(\"button\",{id:\"add-job\",onClick:this.addJob,className:\" edit-job-toggle edit-job-hidden btn-green btn-add-margin\",children:\"add job\"}),this.state.addJobFlag&&/*#__PURE__*/_jsxs(\"div\",{className:\"job-block new-job\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{for:\"role\",children:\"role: \"}),/*#__PURE__*/_jsx(\"input\",{name:\"role\",className:\"edit-role\",type:\"text\",placeholder:\"what was your job title?\"})]}),/*#__PURE__*/_jsx(\"label\",{for:\"employer\",children:\"employer: \"}),/*#__PURE__*/_jsx(\"input\",{name:\"employer\",className:\"edit-employer\",type:\"text\",placeholder:\"who did you work for?\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"float-right\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"edit-year-started\",type:\"number\",min:\"1900\",max:\"2099\",step:\"1\",placeholder:\"2020\"}),\"-\",/*#__PURE__*/_jsx(\"input\",{className:\"edit-year-ended\",type:\"number\",min:\"1900\",max:\"2099\",step:\"1\",placeholder:\"2020\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"ul\",{className:\"edit-responsibilities\",children:this.state.placeholderJob.responsibilities.map(function(responsibility){return/*#__PURE__*/_jsxs(\"li\",{id:uniqid(),children:[/*#__PURE__*/_jsx(\"input\",{id:uniqid(),className:\"edit-responsibility\",type:\"text\",placeholder:responsibility}),\" \",/*#__PURE__*/_jsx(\"i\",{onClick:function onClick(e){return _this2.removeResponsibility(e);},className:\"fas fa-times\"})]},uniqid());})}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(e){return _this2.addResponsibility(e);},className:\"btn-add-responsibility\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-plus\"}),\" add line item\"]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return _this2.submitNewJob(e);},className:\"btn-green btn-add-margin\",children:\"all done\"})]}),this.state.jobs.map(function(job){if(job.editFlag===true){return/*#__PURE__*/_jsxs(\"div\",{id:job.id,className:\"job-block\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{for:\"role\",children:\"role: \"}),/*#__PURE__*/_jsx(\"input\",{name:\"role\",className:\"edit-role\",type:\"text\",defaultValue:job.role})]}),/*#__PURE__*/_jsx(\"label\",{for:\"employer\",children:\"employer: \"}),/*#__PURE__*/_jsx(\"input\",{className:\"edit-employer\",type:\"text\",defaultValue:job.employer}),/*#__PURE__*/_jsxs(\"span\",{className:\"float-right\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"edit-year-started\",type:\"number\",min:\"1900\",max:\"2099\",step:\"1\",defaultValue:job.yearStarted}),\"-\",/*#__PURE__*/_jsx(\"input\",{className:\"edit-year-ended\",type:\"number\",min:\"1900\",max:\"2099\",step:\"1\",defaultValue:job.yearEnded})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"ul\",{className:\"edit-responsibilities\",children:job.responsibilities.map(function(responsibility){return/*#__PURE__*/_jsxs(\"li\",{id:uniqid(),children:[/*#__PURE__*/_jsx(\"input\",{id:uniqid(),className:\"edit-responsibility\",type:\"text\",defaultValue:responsibility}),\" \",/*#__PURE__*/_jsx(\"i\",{onClick:function onClick(e){return _this2.removeResponsibility(e,job);},className:\"btn-dimgray fas fa-times\"})]},uniqid());})}),/*#__PURE__*/_jsxs(\"button\",{onClick:function onClick(e){return _this2.addResponsibility(e,job);},className:\"btn-add-responsibility\",children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-plus\"}),\" add line item\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.updateJob({job:job});},className:\"btn-green btn-add-margin\",children:\"all done\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return _this2.removeJob(e,job);},className:\"btn-red btn-add-margin float-right\",children:\"delete\"})]})]});}else if(_this2.state.activeEditFlag===true){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[job.role,/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.editJob({job:job});},className:\"float-right\",children:/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-cog\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[job.employer,/*#__PURE__*/_jsxs(\"span\",{className:\"float-right\",children:[job.yearStarted,\" - \",job.yearEnded]})]}),/*#__PURE__*/_jsx(\"ul\",{children:job.responsibilities.map(function(responsibility){return/*#__PURE__*/_jsx(\"li\",{id:uniqid(),children:responsibility},uniqid());})})]});}else{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"job-role\",children:job.role}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.editJob({job:job});},className:\"float-right edit-job-hidden\",children:/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-cog\"})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[job.employer,/*#__PURE__*/_jsxs(\"span\",{className:\"float-right\",children:[job.yearStarted,\" - \",job.yearEnded]})]}),/*#__PURE__*/_jsx(\"ul\",{children:job.responsibilities.map(function(responsibility){return/*#__PURE__*/_jsx(\"li\",{id:uniqid(),children:responsibility},uniqid());})})]});}})]});}}]);return Experience;}(Component);export default Experience;","map":{"version":3,"sources":["/Users/owenkraft/the_odin_project/react-resume-v2/src/components/Experience.js"],"names":["React","Component","Emoji","uniqid","Experience","state","jobs","id","employer","role","responsibilities","yearStarted","yearEnded","editFlag","placeholderJob","defaultJob","activeEditFlag","addJobFlag","editJob","bind","updateJob","addJob","removeJob","submitNewJob","addResponsibility","removeResponsibility","toggleEditVisibility","e","newJobNode","target","closest","querySelector","value","newJobResponsibilityLength","childNodes","length","newJob","i","children","parentNode","newJobResponsibility","firstChild","push","setState","console","log","job","jobsCopy","selectedJob","find","blah","selectedJobNode","document","getElementById","selectedResponsibility","jobsCopyIndex","findIndex","jobCopy","splice","checkIfNewJob","classList","contains","placeholderJobCopy","placeholderJobNode","newResp","placeholderNodeID","responsibilitiesNode","childrenArray","Array","from","childrenArrayIndex","node","selectedNodeID","updateActiveEditFlag","editJobButton","editJobButtonHTML","innerHTML","add","remove","addJobButton","toggle","map","responsibility"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Emoji from 'a11y-react-emoji';\nimport uniqid from \"uniqid\";\n\nclass Experience extends Component {\n    constructor() {\n        super()\n        this.state = {\n            jobs: [\n                {\n                    id: uniqid(),\n                    employer: \"Bob's Burgers\",\n                    role: \"Chef, Owner and Operator\",\n                    responsibilities: [\n                        \"Make the burgers\",\n                        \"Serve the burgers\",\n                        \"Clean up afterwards\",\n                    ],\n                    yearStarted: 2011,\n                    yearEnded: 2020,\n                    editFlag: false,\n                },\n                {\n                    id: uniqid(),\n                    employer: \"Big Bob's Diner\",\n                    role: \"Cook and Server\",\n                    responsibilities: [\n                        \"Take orders\",\n                        \"Cook the orders\",\n                        \"Serve the orders\",\n                    ],\n                    yearStarted: 2001,\n                    yearEnded: 2010,\n                    editFlag: false,\n                },\n            ],\n            placeholderJob: {\n                responsibilities: [\n                    \"describe responsibility here\",\n                    \"describe responsibility here\",\n                    \"describe responsibility here\",\n                ],\n            },\n            defaultJob: {\n                responsibilities: [\n                    \"describe responsibility here\",\n                    \"describe responsibility here\",\n                    \"describe responsibility here\",\n                ],\n            },\n            activeEditFlag: false,\n            addJobFlag: false,\n        }\n\n        this.editJob = this.editJob.bind(this);\n        this.updateJob = this.updateJob.bind(this);\n        this.addJob = this.addJob.bind(this);\n        this.removeJob = this.removeJob.bind(this);\n        this.submitNewJob = this.submitNewJob.bind(this);\n        this.addResponsibility = this.addResponsibility.bind(this);\n        this.removeResponsibility = this.removeResponsibility.bind(this);\n        this.toggleEditVisibility = this.toggleEditVisibility.bind(this);\n    }\n\n    submitNewJob(e){\n        const newJobNode = e.target.closest(\".new-job\");\n\n        const employer = newJobNode.querySelector(\".edit-employer\").value;\n        const role = newJobNode.querySelector(\".edit-role\").value;\n        const yearStarted = newJobNode.querySelector(\".edit-year-started\").value;\n        const yearEnded = newJobNode.querySelector(\".edit-year-ended\").value;\n        const newJobResponsibilityLength = newJobNode.querySelector(\".edit-responsibilities\").childNodes.length;\n\n        const newJob = {\n            id: uniqid(),\n            employer: employer,\n            role: role,\n            responsibilities: [],\n            yearStarted: yearStarted,\n            yearEnded: yearEnded,\n            editFlag: false,\n        }\n\n        for(let i = 0; i < newJobResponsibilityLength; i++){\n            const children = newJobNode.parentNode.querySelector(\".edit-responsibilities\");\n            let newJobResponsibility = children.childNodes[i].firstChild.value;\n            newJob.responsibilities.push(newJobResponsibility);\n        }\n  \n        this.setState({\n            // jobs: [...this.state.jobs, newJob],\n            jobs: [newJob, ...this.state.jobs],\n            addJobFlag: !this.state.addJobFlag,\n            placeholderJob: this.state.defaultJob,\n        })\n        console.log(this.state.jobs)\n    }\n\n    editJob(job){\n        const jobsCopy = this.state.jobs;\n        let selectedJob = jobsCopy.find(blah => blah.id === job.job.id);\n        selectedJob.editFlag = !selectedJob.editFlag;\n        this.setState({\n          jobs: jobsCopy,\n        })\n    }\n\n    updateJob(job){\n        const jobsCopy = this.state.jobs;\n        let selectedJob = jobsCopy.find(blah => blah.id === job.job.id);\n        let selectedJobNode = document.getElementById(selectedJob.id)\n\n        const employer = selectedJobNode.querySelector(\".edit-employer\").value;\n        const role = selectedJobNode.querySelector(\".edit-role\").value;\n        const yearStarted = selectedJobNode.querySelector(\".edit-year-started\").value;\n        const yearEnded = selectedJobNode.querySelector(\".edit-year-ended\").value;\n\n        for(let i =0; i < selectedJob.responsibilities.length; i++){\n            const children = selectedJobNode.querySelector(\".edit-responsibilities\");\n            let selectedResponsibility = children.childNodes[i].firstChild.value;\n            selectedJob.responsibilities[i] = selectedResponsibility;\n        }\n\n        selectedJob.employer = employer;\n        selectedJob.role = role;\n        selectedJob.yearStarted = yearStarted;\n        selectedJob.yearEnded = yearEnded;\n        selectedJob.editFlag = !selectedJob.editFlag;\n\n        this.setState({\n          jobs: jobsCopy,\n        })\n    }\n\n    addJob(){\n        this.setState({\n            addJobFlag: !this.state.addJobFlag,\n        })\n    }\n\n    removeJob(e,job){\n        const jobsCopy = this.state.jobs;\n        const jobsCopyIndex = jobsCopy.findIndex(jobCopy => jobCopy.id === job.id);\n\n        jobsCopy.splice(jobsCopyIndex,1);\n\n        this.setState({\n            jobs: jobsCopy,\n        })\n    }\n\n    addResponsibility(e,job){\n        const checkIfNewJob = e.target.closest(\".job-block\").classList.contains(\"new-job\");\n\n        if(checkIfNewJob){\n            const placeholderJobCopy = this.state.placeholderJob;\n            const placeholderJobNode = e.target.closest(\".new-job\");\n            const children = placeholderJobNode.querySelector(\".edit-responsibilities\");\n            const newResp = \"describe responsibility here\";\n\n            for(let i =0; i < placeholderJobCopy.responsibilities.length; i++){\n                let selectedResponsibility = children.childNodes[i].firstChild.value;\n                placeholderJobCopy.responsibilities[i] = selectedResponsibility;\n            }\n\n            placeholderJobCopy.responsibilities = [...this.state.placeholderJob.responsibilities, newResp]\n    \n            this.setState({\n                placeholderJob: placeholderJobCopy\n            })\n        } else {\n            const jobsCopy = this.state.jobs;\n            const selectedJob = jobsCopy.find(blah => blah.id === job.id);\n            const selectedJobNode = document.getElementById(job.id);\n            const children = selectedJobNode.querySelector(\".edit-responsibilities\");\n            const newResp = \"describe responsibility here\";\n            \n\n            for(let i =0; i < selectedJob.responsibilities.length; i++){\n                let selectedResponsibility = children.childNodes[i].firstChild.value;\n                selectedJob.responsibilities[i] = selectedResponsibility;\n            }\n\n            selectedJob.responsibilities.push(newResp);\n    \n            this.setState({\n                jobs: jobsCopy,\n            })\n        }\n    }\n\n    removeResponsibility(e,job){\n        const checkIfNewJob = e.target.closest(\".job-block\").classList.contains(\"new-job\");\n\n        if(checkIfNewJob){\n            const placeholderJobCopy = this.state.placeholderJob;\n            const placeholderNodeID = e.target.parentNode.id;\n            const responsibilitiesNode = e.target.closest(\".edit-responsibilities\");\n            const childrenArray = Array.from(responsibilitiesNode.childNodes);\n            const childrenArrayIndex = childrenArray.findIndex(node => node.id === placeholderNodeID);\n\n            for(let i = 0; i < placeholderJobCopy.responsibilities.length; i++){\n                let selectedResponsibility = responsibilitiesNode.childNodes[i].firstChild.value;\n                placeholderJobCopy.responsibilities[i] = selectedResponsibility;\n            };\n\n            placeholderJobCopy.responsibilities.splice(childrenArrayIndex,1);\n    \n            this.setState({\n                placeholderJob: placeholderJobCopy\n            })\n        } else {\n            const jobsCopy = this.state.jobs;\n            const selectedJob = jobsCopy.find(blah => blah.id === job.id);\n            const selectedNodeID = e.target.parentNode.id;\n            const responsibilitiesNode = e.target.closest(\".edit-responsibilities\");\n            const childrenArray = Array.from(responsibilitiesNode.childNodes);\n            const childrenArrayIndex = childrenArray.findIndex(node => node.id === selectedNodeID);\n\n            for(let i = 0; i < selectedJob.responsibilities.length; i++){\n                let selectedResponsibility = responsibilitiesNode.childNodes[i].firstChild.value;\n                selectedJob.responsibilities[i] = selectedResponsibility;\n            };\n\n            selectedJob.responsibilities.splice(childrenArrayIndex,1);\n\n            this.setState({\n                jobs: jobsCopy,\n            })\n        }\n\n    }\n\n    toggleEditVisibility(){\n        const updateActiveEditFlag = !this.state.activeEditFlag;\n        const editJobButton = document.getElementById(\"edit-job\");\n        const editJobButtonHTML = \"<i class='fas fa-cog'></i>\"\n        if(updateActiveEditFlag === true){\n            editJobButton.innerHTML = \"all done\";\n            editJobButton.classList.add(\"btn-green-inverse\");\n        } else {\n            editJobButton.innerHTML = editJobButtonHTML;\n            editJobButton.classList.remove(\"btn-green-inverse\");\n        }\n        \n        const addJobButton = document.getElementById(\"add-job\");\n        addJobButton.classList.toggle(\"edit-job-hidden\");\n\n        this.setState({\n            activeEditFlag: updateActiveEditFlag,\n        })\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>\n                    Experience <Emoji symbol=\"💼\" label=\"briefcase\" />\n                    <button id=\"edit-job\" onClick={this.toggleEditVisibility} className=\"float-right\"><i class=\"fas fa-cog\"></i></button>\n                </h1>\n                <button id=\"add-job\" onClick={this.addJob} className=\" edit-job-toggle edit-job-hidden btn-green btn-add-margin\">add job</button>\n\n                {\n                    this.state.addJobFlag &&\n\n                    <div className=\"job-block new-job\">\n                        <div>\n                            <label for=\"role\">role: </label>\n                            <input name=\"role\" className=\"edit-role\" type=\"text\" placeholder=\"what was your job title?\"/>\n                        </div>\n                        <label for=\"employer\">employer: </label>\n                        <input name=\"employer\" className=\"edit-employer\" type=\"text\" placeholder=\"who did you work for?\" />\n                        <span className=\"float-right\">\n                            <input className=\"edit-year-started\" type=\"number\" min=\"1900\" max=\"2099\" step=\"1\" placeholder=\"2020\" />\n                            -\n                            <input className=\"edit-year-ended\" type=\"number\" min=\"1900\" max=\"2099\" step=\"1\" placeholder=\"2020\" />\n                        </span>\n                        <div>\n                            <ul className=\"edit-responsibilities\">\n                                {\n                                    this.state.placeholderJob.responsibilities.map(\n                                    (responsibility) => \n                                    <li key={uniqid()} id={uniqid()}>\n                                        <input id={uniqid()} className=\"edit-responsibility\" type=\"text\" placeholder={responsibility} /> <i onClick={(e) => this.removeResponsibility(e)} className=\"fas fa-times\"></i>\n                                    </li>\n                                    )\n                                }\n                            </ul>\n                            <button onClick={(e) => this.addResponsibility(e)} className=\"btn-add-responsibility\"><i class=\"fas fa-plus\"></i> add line item</button>\n                        </div>\n\n                        <button onClick={(e) => this.submitNewJob(e)} className=\"btn-green btn-add-margin\">all done</button>\n                    </div>\n                }\n\n                {this.state.jobs.map(\n                    (job) => {if(job.editFlag === true){\n                        return (\n                            <div id={job.id} className=\"job-block\">\n                                <div>\n                                    <label for=\"role\">role: </label>\n                                    <input name=\"role\" className=\"edit-role\" type=\"text\" defaultValue={job.role} />\n                                </div>\n                                <label for=\"employer\">employer: </label>\n                                <input className=\"edit-employer\" type=\"text\" defaultValue={job.employer} />\n                                \n                                <span className=\"float-right\">\n                                    <input className=\"edit-year-started\" type=\"number\" min=\"1900\" max=\"2099\" step=\"1\" defaultValue={job.yearStarted} />\n                                    -\n                                    <input className=\"edit-year-ended\" type=\"number\" min=\"1900\" max=\"2099\" step=\"1\" defaultValue={job.yearEnded} />\n                                </span>\n                                <div>\n                                    <ul className=\"edit-responsibilities\">\n                                        {\n                                            job.responsibilities.map(\n                                            (responsibility) => \n                                            <li key={uniqid()} id={uniqid()}>\n                                                <input id={uniqid()} className=\"edit-responsibility\" type=\"text\" defaultValue={responsibility} /> <i onClick={(e) => this.removeResponsibility(e,job)} className=\"btn-dimgray fas fa-times\"></i>\n                                            </li>\n                                            )\n                                        }\n                                    </ul>\n                                    <button onClick={(e) => this.addResponsibility(e,job)} className=\"btn-add-responsibility\"><i class=\"fas fa-plus\"></i> add line item</button>\n                                </div>\n                                <div>\n                                    <button onClick={() => this.updateJob({job})} className=\"btn-green btn-add-margin\">all done</button>\n                                    <button onClick={(e) => this.removeJob(e,job)} className=\"btn-red btn-add-margin float-right\">delete</button>\n                                </div>\n                            </div>\n                        )\n                    } else if(this.state.activeEditFlag === true) {\n                        return (\n                            <div>\n                                <div>\n                                    {job.role}\n                                    <button onClick={() => this.editJob({job})} className=\"float-right\"><i class=\"fas fa-cog\"></i></button>\n                                </div>\n                                <div>\n                                    {job.employer}\n                                    <span className=\"float-right\">\n                                        {job.yearStarted} - {job.yearEnded}\n                                    </span>\n                                </div>\n\n                                <ul>\n                                    {job.responsibilities.map(\n                                        (responsibility) => \n                                        <li key={uniqid()} id={uniqid()}>{responsibility}</li>)}\n                                </ul>\n                                \n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div>\n                                <div>\n                                    <span className=\"job-role\">{job.role}</span>\n                                    <button onClick={() => this.editJob({job})} className=\"float-right edit-job-hidden\"><i class=\"fas fa-cog\"></i></button>\n                                </div>\n                                <div>\n                                    {job.employer}\n                                    <span className=\"float-right\">\n                                        {job.yearStarted} - {job.yearEnded}\n                                    </span>\n                                </div>\n\n                                <ul>\n                                    {job.responsibilities.map(\n                                        (responsibility) => \n                                        <li key={uniqid()} id={uniqid()}>{responsibility}</li>)}\n                                </ul>\n                                \n                            </div>\n                        )\n                    }\n                }\n                )\n                \n                }\n            </div>\n        )\n    }\n}\n  \n  export default Experience;"]},"metadata":{},"sourceType":"module"}