{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/owenkraft/the_odin_project/cv-generator-react/cv-generator-react/src/components/Experience.js\";\nimport React, { Component } from 'react';\nimport Emoji from 'a11y-react-emoji';\nimport uniqid from \"uniqid\";\n\nclass Experience extends Component {\n  constructor() {\n    super();\n    this.state = {\n      jobs: [{\n        id: uniqid(),\n        employer: \"bugaloo\",\n        role: \"maker\",\n        responsibilities: [\"make stuff\", \"make more stuff\", \"make even more stuff\"],\n        yearStarted: 2014,\n        yearEnded: 2015,\n        editFlag: false\n      }, {\n        id: uniqid(),\n        employer: \"electric\",\n        role: \"shaker\",\n        responsibilities: [\"shake stuff up\", \"shake stuff up more\", \"shake stuff up even more\"],\n        yearStarted: 2015,\n        yearEnded: 2020,\n        editFlag: false\n      }],\n      activeEditFlag: false,\n      addJobFlag: false\n    };\n    this.editJob = this.editJob.bind(this);\n    this.updateJob = this.updateJob.bind(this);\n    this.addJob = this.addJob.bind(this);\n    this.addResponsibility = this.addResponsibility.bind(this);\n  }\n\n  editJob(job) {\n    const jobsCopy = this.state.jobs;\n    let selectedJob = jobsCopy.find(blah => blah.id === job.job.id);\n    selectedJob.editFlag = !selectedJob.editFlag;\n    this.setState({\n      jobs: jobsCopy\n    });\n  }\n\n  updateJob(job) {\n    const jobsCopy = this.state.jobs;\n    let selectedJob = jobsCopy.find(blah => blah.id === job.job.id);\n    let selectedJobNode = document.getElementById(selectedJob.id);\n    const employer = selectedJobNode.parentNode.querySelector(\".edit-employer\").value;\n    const role = selectedJobNode.parentNode.querySelector(\".edit-role\").value;\n    const yearStarted = selectedJobNode.parentNode.querySelector(\".edit-year-started\").value;\n    const yearEnded = selectedJobNode.parentNode.querySelector(\".edit-year-ended\").value;\n\n    for (let i = 0; i < selectedJob.responsibilities.length; i++) {\n      const children = selectedJobNode.parentNode.querySelector(\".edit-responsibilities\");\n      let selectedResponsibility = children.childNodes[i].firstChild.value;\n      selectedJob.responsibilities[i] = selectedResponsibility;\n    }\n\n    selectedJob.employer = employer;\n    selectedJob.role = role;\n    selectedJob.yearStarted = yearStarted;\n    selectedJob.yearEnded = yearEnded;\n    selectedJob.editFlag = !selectedJob.editFlag;\n    this.setState({\n      jobs: jobsCopy\n    });\n  }\n\n  addJob() {\n    console.log(\"sdfasd\");\n    this.setState({\n      addJobFlag: !this.state.addJobFlag\n    });\n  }\n\n  addResponsibility(e) {\n    console.log(e);\n  } ///// need to add additional responsibility fields, then figure out how to capture those\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Experience \", /*#__PURE__*/_jsxDEV(Emoji, {\n          symbol: \"\\uD83D\\uDDFA\\uFE0F\",\n          label: \"world-map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addJob,\n          className: \"float-right\",\n          children: \"add job\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), this.state.addJobFlag && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"new-job\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-employer\",\n          type: \"text\",\n          defaultValue: \"employer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-role\",\n          type: \"text\",\n          defaultValue: \"role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"float-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"edit-year-started\",\n            type: \"number\",\n            min: \"1900\",\n            max: \"2099\",\n            step: \"1\",\n            defaultValue: \"2020\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"edit-year-ended\",\n            type: \"number\",\n            min: \"1900\",\n            max: \"2099\",\n            step: \"1\",\n            defaultValue: \"2020\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"edit-responsibilities\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: uniqid(),\n              className: \"edit-responsibility\",\n              type: \"text\",\n              defaultValue: \"responsibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this)\n          }, uniqid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.addResponsibility({\n                e\n              }),\n              children: \"add another responsibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this)\n          }, uniqid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          onClick: () => this.addJob,\n          className: \"far fa-check-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), this.state.jobs.map(job => {\n        if (job.editFlag === true) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            id: job.id,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"edit-employer\",\n              type: \"text\",\n              defaultValue: job.employer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"edit-role\",\n              type: \"text\",\n              defaultValue: job.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-right\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"edit-year-started\",\n                type: \"number\",\n                min: \"1900\",\n                max: \"2099\",\n                step: \"1\",\n                defaultValue: job.yearStarted\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"edit-year-ended\",\n                type: \"number\",\n                min: \"1900\",\n                max: \"2099\",\n                step: \"1\",\n                defaultValue: job.yearEnded\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"edit-responsibilities\",\n              children: job.responsibilities.map(responsibility => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: uniqid(),\n                  className: \"edit-responsibility\",\n                  type: \"text\",\n                  defaultValue: responsibility\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 45\n                }, this)\n              }, uniqid(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              onClick: () => this.updateJob({\n                job\n              }),\n              className: \"far fa-check-square\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [job.employer, \" - \", job.role, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              onClick: () => this.editJob({\n                job\n              }),\n              className: \"far fa-edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 61\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"float-right\",\n              children: [job.yearStarted, \" - \", job.yearEnded]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: job.responsibilities.map(responsibility => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: responsibility\n              }, uniqid(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this);\n        }\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Experience;","map":{"version":3,"sources":["/Users/owenkraft/the_odin_project/cv-generator-react/cv-generator-react/src/components/Experience.js"],"names":["React","Component","Emoji","uniqid","Experience","constructor","state","jobs","id","employer","role","responsibilities","yearStarted","yearEnded","editFlag","activeEditFlag","addJobFlag","editJob","bind","updateJob","addJob","addResponsibility","job","jobsCopy","selectedJob","find","blah","setState","selectedJobNode","document","getElementById","parentNode","querySelector","value","i","length","children","selectedResponsibility","childNodes","firstChild","console","log","e","render","map","responsibility"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Emoji from 'a11y-react-emoji';\nimport uniqid from \"uniqid\";\n\nclass Experience extends Component {\n    constructor() {\n        super()\n        this.state = {\n            jobs: [\n                {\n                    id: uniqid(),\n                    employer: \"bugaloo\",\n                    role: \"maker\",\n                    responsibilities: [\n                        \"make stuff\",\n                        \"make more stuff\",\n                        \"make even more stuff\",\n                    ],\n                    yearStarted: 2014,\n                    yearEnded: 2015,\n                    editFlag: false,\n                },\n                {\n                    id: uniqid(),\n                    employer: \"electric\",\n                    role: \"shaker\",\n                    responsibilities: [\n                        \"shake stuff up\",\n                        \"shake stuff up more\",\n                        \"shake stuff up even more\",\n                    ],\n                    yearStarted: 2015,\n                    yearEnded: 2020,\n                    editFlag: false,\n                },\n            ],\n            activeEditFlag: false,\n            addJobFlag: false,\n        }\n\n        this.editJob = this.editJob.bind(this);\n        this.updateJob = this.updateJob.bind(this);\n        this.addJob = this.addJob.bind(this);\n        this.addResponsibility = this.addResponsibility.bind(this);\n    }\n\n    editJob(job){\n        const jobsCopy = this.state.jobs;\n        let selectedJob = jobsCopy.find(blah => blah.id === job.job.id);\n        selectedJob.editFlag = !selectedJob.editFlag;\n        this.setState({\n          jobs: jobsCopy,\n        })\n    }\n\n    updateJob(job){\n        const jobsCopy = this.state.jobs;\n        let selectedJob = jobsCopy.find(blah => blah.id === job.job.id);\n        let selectedJobNode = document.getElementById(selectedJob.id)\n\n        const employer = selectedJobNode.parentNode.querySelector(\".edit-employer\").value;\n        const role = selectedJobNode.parentNode.querySelector(\".edit-role\").value;\n        const yearStarted = selectedJobNode.parentNode.querySelector(\".edit-year-started\").value;\n        const yearEnded = selectedJobNode.parentNode.querySelector(\".edit-year-ended\").value;\n\n        for(let i =0; i < selectedJob.responsibilities.length; i++){\n            const children = selectedJobNode.parentNode.querySelector(\".edit-responsibilities\");\n            let selectedResponsibility = children.childNodes[i].firstChild.value;\n            selectedJob.responsibilities[i] = selectedResponsibility;\n        }\n\n        selectedJob.employer = employer;\n        selectedJob.role = role;\n        selectedJob.yearStarted = yearStarted;\n        selectedJob.yearEnded = yearEnded;\n        selectedJob.editFlag = !selectedJob.editFlag;\n\n        this.setState({\n          jobs: jobsCopy,\n        })\n    }\n\n    addJob(){\n        console.log(\"sdfasd\")\n        this.setState({\n            addJobFlag: !this.state.addJobFlag,\n        })\n    }\n\n    addResponsibility(e){\n        console.log(e)\n    }\n\n///// need to add additional responsibility fields, then figure out how to capture those\n\n    render() {\n        return (\n            <div>\n                <h1>\n                    Experience <Emoji symbol=\"🗺️\" label=\"world-map\" />\n                    <button onClick={this.addJob} className=\"float-right\">add job</button>\n                </h1>\n\n                {\n                    this.state.addJobFlag &&\n\n                    <div id=\"new-job\">\n                        <input className=\"edit-employer\" type=\"text\" defaultValue=\"employer\" />\n                        <input className=\"edit-role\" type=\"text\" defaultValue=\"role\" />\n                        <span className=\"float-right\">\n                            <input className=\"edit-year-started\" type=\"number\" min=\"1900\" max=\"2099\" step=\"1\" defaultValue=\"2020\" />\n                            <input className=\"edit-year-ended\" type=\"number\" min=\"1900\" max=\"2099\" step=\"1\" defaultValue=\"2020\" />\n                        </span>\n                        <ul className=\"edit-responsibilities\">\n                                <li key={uniqid()}>\n                                    <input id={uniqid()} className=\"edit-responsibility\" type=\"text\" defaultValue=\"responsibility\" />\n                                </li>\n                                <li key={uniqid()}>\n                                    {/* <button onClick={this.addResponsibility}>add another responsibility</button> */}\n                                    <button onClick={() => this.addResponsibility({e})}>add another responsibility</button>\n                                </li>\n                        </ul>\n                        <i onClick={() => this.addJob} className=\"far fa-check-square\"></i>\n                    </div>\n                }\n\n                {this.state.jobs.map(\n                    (job) => {if(job.editFlag === true){\n                        return (\n                            <div id={job.id}>\n                                <input className=\"edit-employer\" type=\"text\" defaultValue={job.employer} />\n                                <input className=\"edit-role\" type=\"text\" defaultValue={job.role} />\n                                <span className=\"float-right\">\n                                    <input className=\"edit-year-started\" type=\"number\" min=\"1900\" max=\"2099\" step=\"1\" defaultValue={job.yearStarted} />\n                                    <input className=\"edit-year-ended\" type=\"number\" min=\"1900\" max=\"2099\" step=\"1\" defaultValue={job.yearEnded} />\n                                </span>\n                                <ul className=\"edit-responsibilities\">\n                                    {job.responsibilities.map(\n                                        (responsibility) => \n                                        <li key={uniqid()}>\n                                            <input id={uniqid()} className=\"edit-responsibility\" type=\"text\" defaultValue={responsibility} />\n                                        </li>)}\n                                </ul>\n                                <i onClick={() => this.updateJob({job})} className=\"far fa-check-square\"></i>\n                            </div>\n                        )\n                    } else {\n                        return (\n                            <div>\n                                {job.employer} - {job.role} <i onClick={() => this.editJob({job})} className=\"far fa-edit\"></i>\n                                <span className=\"float-right\">\n                                    {job.yearStarted} - {job.yearEnded}\n                                </span>\n                                <ul>\n                                    {job.responsibilities.map(\n                                        (responsibility) => \n                                        <li key={uniqid()}>{responsibility}</li>)}\n                                </ul>\n                                \n                            </div>\n                        )\n                    }\n                }\n                )\n                \n                }\n            </div>\n        )\n    }\n}\n  \n  export default Experience;"]},"metadata":{},"sourceType":"module"}